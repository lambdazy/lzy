syntax = "proto3";

package ai.lzy.v1.allocator;

option java_outer_classname = "VmAllocatorApi";
option java_package = "ai.lzy.v1";

import "ai/lzy/v1/operation-service/operation.proto";
import "ai/lzy/v1/allocator/volume.proto";
import "google/protobuf/duration.proto";

//
// Service to allocate vm
// Auth requirements: IAM Internal User
//
service Allocator {

  // Create allocation session
  rpc CreateSession (CreateSessionRequest) returns (CreateSessionResponse);

  // Delete allocation session and all resources
  rpc DeleteSession (DeleteSessionRequest) returns (DeleteSessionResponse);

  //
  // Allocate vm with given spec
  // metadata: AllocateMetadata
  // response: AllocateResponse
  //
  rpc Allocate (AllocateRequest) returns (ai.lzy.v1.Operation);

  // Return control of vm to allocator
  rpc Free (FreeRequest) returns (FreeResponse);
}

// ========= Create session ==========

message CachePolicy {
  google.protobuf.Duration idle_timeout = 1;
}

message CreateSessionRequest {
  string owner = 1;
  CachePolicy cache_policy = 2;
}
message CreateSessionResponse {
  string session_id = 1;
}

// ========= Delete session ==========

message DeleteSessionRequest {
  string session_id = 1;
}
message DeleteSessionResponse {}

// ========= Allocate ==========
message AllocateRequest {
  message Workload {
    string name = 1;

    // image must contains allocator agent to notify allocator about lifecycle
    string image = 2;

    map<string, string> env = 16;
    repeated string args = 17;
    map<uint32, uint32> port_bindings = 18;  // host port: container port

    repeated Mount volumeMounts = 20;
  }

  string session_id = 1;
  string pool_label = 2;
  string zone = 3;
  repeated Workload workload = 4;
  repeated Volume volumes = 5;
}

message AllocateResponse {
  string pool_id = 1;
  string vm_id = 2;
  string session_id = 3;
  map<string, string> metadata = 4;
  repeated VmEndpoint endpoints = 5;

  message VmEndpoint {
    VmEndpointType type = 1;
    string value = 2;

    enum VmEndpointType {
      UNSPECIFIED = 0;
      HOST_NAME = 1;
      EXTERNAL_IP = 2;
      INTERNAL_IP = 3;
    }
  }
}

message AllocateMetadata {
  string vm_id = 1;
}

// ========= Free ==========

message FreeRequest {
  string vm_id = 2;
}

message FreeResponse {}
