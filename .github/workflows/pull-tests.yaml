name: Test on pull request
on:
  push:
    branches: [ master, dev ]
  pull_request:
  workflow_dispatch:
jobs:

  #### <- TODO: replace with call to reusable workflow in future: .github/workflows/reusable/pull-request-workflow.yaml
  all-tests:
#    runs-on: self-hosted
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: 'clean'
        run: sudo iptables -t filter -F && sudo iptables -t filter -X && sudo systemctl restart docker

      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9.7
          activate-environment: "py39"

      - name: 'install python requirements'
        run: eval "$(conda shell.bash hook)" && conda activate py39 && pip install -r lzy-servant/docker/requirements.txt

      - name: 'install pylzy'
        run: eval "$(conda shell.bash hook)" && conda activate py39 && cd lzy-python/ && pip install . && cd ..

      - name: 'python-test'
        timeout-minutes: 5
        run: eval "$(conda shell.bash hook)" && conda activate py39 && cd lzy-python/ && python -m unittest discover tests/ && cd ..

      - name: 'java unit tests and install'
        timeout-minutes: 5
        run: mvn clean install

      - name: 'LzyDryStartupTest'
        timeout-minutes: 5
        run: cd lzy-test && mvn test -Dtest=LzyDryStartupTest -DargLine="-Djava.util.concurrent.ForkJoinPool.common.parallelism=64" && cd ..

      - name: 'LzyStartupWithAvailableZygotesTest'
        timeout-minutes: 5
        run: cd lzy-test && mvn test -Dtest=LzyStartupWithAvailableZygotesTest -DargLine="-Djava.util.concurrent.ForkJoinPool.common.parallelism=64" && cd ..

      - name: 'MultiSessionTest'
        timeout-minutes: 5
        run: cd lzy-test && mvn test -Dtest=MultiSessionTest -DargLine="-Djava.util.concurrent.ForkJoinPool.common.parallelism=64" && cd ..

      - name: 'PyApiTest'
        timeout-minutes: 15
        run: cd lzy-test && mvn test -Dtest=PyApiTest -DargLine="-Djava.util.concurrent.ForkJoinPool.common.parallelism=64" && cd ..

      - name: 'RunTest'
        timeout-minutes: 5
        run: cd lzy-test && mvn test -Dtest=RunTest -DargLine="-Djava.util.concurrent.ForkJoinPool.common.parallelism=64" && cd ..

      - name: 'SnapshotTest'
        timeout-minutes: 5
        run: cd lzy-test && mvn test -Dtest=SnapshotTest -DargLine="-Djava.util.concurrent.ForkJoinPool.common.parallelism=64" && cd ..

      - name: 'TerminalCrashTest'
        timeout-minutes: 5
        run: cd lzy-test && mvn test -Dtest=TerminalCrashTest -DargLine="-Djava.util.concurrent.ForkJoinPool.common.parallelism=64" && cd ..
  #### <- TODO: replace with call to reusable workflow in future: .github/workflows/reusable/pull-request-workflow.yaml
