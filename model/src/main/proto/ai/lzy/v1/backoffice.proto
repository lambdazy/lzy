syntax = "proto3";

package ai.lzy.v1;

import "ai/lzy/v1/auth.proto";
import "ai/lzy/v1/task.proto";

option java_outer_classname = "BackOffice";
option java_package = "ai.lzy.v1";

service LzyBackoffice{
  rpc AddKey(AddKeyRequest) returns (AddKeyResult);
  rpc ListKeys(ListKeysRequest) returns (ListKeysResponse);
  rpc DeleteKey(DeleteKeyRequest) returns (DeleteKeyResponse);
  rpc CreateUser(CreateUserRequest) returns (CreateUserResult);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResult);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  rpc GenerateSessionId(GenerateSessionIdRequest) returns (GenerateSessionIdResponse);
  rpc AuthUserSession(AuthUserSessionRequest) returns (AuthUserSessionResponse);
  rpc CheckSession(CheckSessionRequest) returns (CheckSessionResponse);
  rpc CheckPermission(CheckPermissionRequest) returns (CheckPermissionResponse);
  rpc GetTasks(GetTasksRequest) returns (GetTasksResponse);
}

message AddKeyRequest{
  UserCredentials backofficeCredentials = 1;
  BackofficeUserCredentials userCredentials = 2;
  string publicKey = 3;
  string keyName = 4;
}

message User{
  string userId = 1;
}

message CreateUserRequest{
  UserCredentials backofficeCredentials = 1;
  BackofficeUserCredentials creatorCredentials = 2;
  User user = 3;
}

message DeleteUserRequest{
  UserCredentials backofficeCredentials = 1;
  BackofficeUserCredentials deleterCredentials = 2;
  string userId = 3;
}

message ListUsersRequest{
  UserCredentials backofficeCredentials = 1;
  BackofficeUserCredentials callerCredentials = 2;
}
message ListUsersResponse{
  repeated User users = 1;
}

message DeleteUserResult {};

message CreateUserResult {};

message AddKeyResult{};

message BackofficeUserCredentials{
  string user_id = 1; // Can contains Oauth token in future
  string sessionId = 2;
};

message GenerateSessionIdRequest{
  UserCredentials backofficeCredentials = 1;
};

message GenerateSessionIdResponse{
  string sessionId = 1;
}

enum OAuthProviders{
  GITHUB = 0;
};

message AuthUserSessionRequest{
  UserCredentials backofficeCredentials = 1;
  string userId = 2;
  string sessionId = 3;
  OAuthProviders provider = 4;
  string providerUserId = 5;
}

message AuthUserSessionResponse{
  BackofficeUserCredentials credentials = 1;
};

message CheckSessionRequest{
  UserCredentials backofficeCredentials = 1;
  string sessionId = 2;
  string userId = 3;
};

message CheckSessionResponse{
  enum SessionStatus{
    EXISTS = 0;
    WRONG_USER = 1;
    NOT_RELATED_WITH_USER = 2;
    NOT_EXISTS = 3;
  }
  SessionStatus status = 1;
}

message CheckPermissionRequest{
  UserCredentials backofficeCredentials = 1;
  BackofficeUserCredentials credentials = 2;
  string permissionName = 3;
}

message CheckPermissionResponse{
  bool granted = 1;
}

message GetTasksRequest{
  UserCredentials backofficeCredentials = 1;
  BackofficeUserCredentials credentials = 2;
}

message ListKeysRequest {
  UserCredentials backofficeCredentials = 1;
  BackofficeUserCredentials credentials = 2;
}

message GetTasksResponse{
  TasksList tasks = 1;
}

message ListKeysResponse {
  repeated string keyNames = 1;
}

message DeleteKeyRequest {
  UserCredentials backofficeCredentials = 1;
  BackofficeUserCredentials credentials = 2;
  string keyName = 3;
}

message DeleteKeyResponse {}
