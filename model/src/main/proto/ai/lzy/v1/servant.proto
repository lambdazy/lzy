syntax = "proto3";

package ai.lzy.v1;

import "ai/lzy/v1/auth.proto";
import "ai/lzy/v1/zygote.proto";
import "ai/lzy/v1/task.proto";

option java_outer_classname = "Servant";
option java_package = "ai.lzy.v1";

service LzyServant {
  /** Only one execution at a time */
  rpc Start (Empty) returns (stream ServantProgress);
  rpc Env (EnvSpec) returns (EnvResult);
  rpc Execute (TaskSpec) returns (ExecutionStarted);
  rpc Signal (TaskSignal) returns (Empty);
  rpc Update (Auth) returns (Empty);
  rpc Status(Empty) returns (ServantStatus);
  rpc Stop (Empty) returns (Empty);
}

message ServantProgress {
  oneof status {
    Started start = 1;
    StateChanged changed = 2;
    ExecutionStarted executeStart = 5;
    ExecutionConcluded executeStop = 6;
    CommunicationCompleted communicationCompleted = 7;
    Failed failed = 8;
    Concluded concluded = 9;
  }
}

message ExecutionStarted {
}

message Started {
}

message Failed {
}

message Concluded {
}

message CommunicationCompleted {}

message EnvResult {
  string description = 1;
  int32  rc = 2;
}

message StateChanged {
  State newState = 1;
  string tid = 2;
  enum State {
    UNSPECIFIED = 0;
    PREPARING = 1;
    CONNECTED = 2;
    RUNNING = 3;
    SUSPENDED = 4;
    FINISHED = 5;
    DESTROYED = 6;
  }
}

message ExecutionConcluded {
  int32 rc = 1;
  string description = 2;
}

message ServantStatus {
  Status status = 1;
  repeated SlotStatus connections = 2;

  enum Status {
    UNKNOWN = 0;
    STARTED = 1;
    REGISTERING = 2;
    REGISTERED = 3;
    PREPARING_EXECUTION = 4;
    EXECUTING = 5;
  }
}
