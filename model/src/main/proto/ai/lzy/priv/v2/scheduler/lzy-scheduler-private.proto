syntax = "proto3";

package ai.lzy.priv.v2.scheduler;

option java_outer_classname = "SchedulerPrivateApi";
option java_package = "ai.lzy.priv.v2.lzy";

service SchedulerPrivate {
  rpc RegisterServant (RegisterServantRequest) returns (RegisterServantResponse);
  rpc ServantProgress (ServantProgressRequest) returns (ServantProgressResponse);
}

// =========Register servant=========

message RegisterServantRequest {
  string workflowId = 1;
  string servantId = 2;
  string servantToken = 3;
  string servantUri = 4;
}
message RegisterServantResponse {}

// ========= Progress ==========
message Started {}
message Configured {
  int32 rc = 1;
  string description = 2;
}
message Concluded {}
message CommunicationCompleted {}
message ExecutionConcluded {
  int32 rc = 1;
  string description = 2;
}

message Executing {}
message Idle {}


message ServantProgress {
  oneof status {
    Started start = 1;
    Configured configured = 2;
    ExecutionConcluded executeStop = 3;
    CommunicationCompleted communicationCompleted = 4;
    Concluded exit = 5;

    Executing executing = 6;
    Idle idle = 7;
  }
}

message ServantProgressRequest {
  string workflowId = 1;
  string servantId = 2;
  string servantToken = 3;
  ServantProgress progress = 4;
}
message ServantProgressResponse {}