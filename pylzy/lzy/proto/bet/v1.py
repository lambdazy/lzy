# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: lzy/proto/v1/lzy-iam.proto, lzy/proto/v1/lzy-access-binding-service.proto, lzy/proto/v1/lzy-auth-service.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List, Optional

import betterproto
import grpclib


class AccessBindingAction(betterproto.Enum):
    UNSPECIFIED = 0
    ADD = 1
    REMOVE = 2


@dataclass
class Resource(betterproto.Message):
    id: str = betterproto.string_field(1)
    type: str = betterproto.string_field(2)


@dataclass
class Subject(betterproto.Message):
    id: str = betterproto.string_field(1)


@dataclass
class Credentials(betterproto.Message):
    name: str = betterproto.string_field(1)
    credentials: str = betterproto.string_field(2)
    type: str = betterproto.string_field(3)


@dataclass
class AccessBinding(betterproto.Message):
    role: str = betterproto.string_field(1)
    subject: "Subject" = betterproto.message_field(2)


@dataclass
class AccessBindingDelta(betterproto.Message):
    binding: "AccessBinding" = betterproto.message_field(1)
    action: "AccessBindingAction" = betterproto.enum_field(2)


@dataclass
class ListAccessBindingsRequest(betterproto.Message):
    resource: "Resource" = betterproto.message_field(1)


@dataclass
class ListAccessBindingsResponse(betterproto.Message):
    bindings: List["AccessBinding"] = betterproto.message_field(1)


@dataclass
class SetAccessBindingsRequest(betterproto.Message):
    resource: "Resource" = betterproto.message_field(1)
    bindings: List["AccessBinding"] = betterproto.message_field(2)


@dataclass
class SetAccessBindingsResponse(betterproto.Message):
    pass


@dataclass
class UpdateAccessBindingsRequest(betterproto.Message):
    resource: "Resource" = betterproto.message_field(1)
    deltas: List["AccessBindingDelta"] = betterproto.message_field(2)


@dataclass
class UpdateAccessBindingsResponse(betterproto.Message):
    pass


@dataclass
class AuthenticateRequest(betterproto.Message):
    pass


class LzyAccessBindingServiceStub(betterproto.ServiceStub):
    async def list_access_bindings(
        self, *, resource: Optional["Resource"] = None
    ) -> ListAccessBindingsResponse:
        request = ListAccessBindingsRequest()
        if resource is not None:
            request.resource = resource

        return await self._unary_unary(
            "/lzy.proto.v1.LzyAccessBindingService/ListAccessBindings",
            request,
            ListAccessBindingsResponse,
        )

    async def set_access_bindings(
        self,
        *,
        resource: Optional["Resource"] = None,
        bindings: List["AccessBinding"] = [],
    ) -> SetAccessBindingsResponse:
        request = SetAccessBindingsRequest()
        if resource is not None:
            request.resource = resource
        if bindings is not None:
            request.bindings = bindings

        return await self._unary_unary(
            "/lzy.proto.v1.LzyAccessBindingService/SetAccessBindings",
            request,
            SetAccessBindingsResponse,
        )

    async def update_access_bindings(
        self,
        *,
        resource: Optional["Resource"] = None,
        deltas: List["AccessBindingDelta"] = [],
    ) -> UpdateAccessBindingsResponse:
        request = UpdateAccessBindingsRequest()
        if resource is not None:
            request.resource = resource
        if deltas is not None:
            request.deltas = deltas

        return await self._unary_unary(
            "/lzy.proto.v1.LzyAccessBindingService/UpdateAccessBindings",
            request,
            UpdateAccessBindingsResponse,
        )


class LzyAuthenticateServiceStub(betterproto.ServiceStub):
    async def authenticate(self) -> Subject:
        request = AuthenticateRequest()

        return await self._unary_unary(
            "/lzy.proto.v1.LzyAuthenticateService/Authenticate",
            request,
            Subject,
        )
