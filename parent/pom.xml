<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ai.lzy</groupId>
  <artifactId>parent</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <maven-dependency-plugin.version>3.0.0</maven-dependency-plugin.version>
    <maven-help-plugin.version>3.2.0</maven-help-plugin.version>
    <build-helper-maven-plugin.version>3.1.0</build-helper-maven-plugin.version>
    <kafka.version>1.0.0</kafka.version>
    <nirvana-client.version>3.202</nirvana-client.version>
    <yql-jdbc.version>1.0.31</yql-jdbc.version>
    <iceberg-inside-yt-version>5696584</iceberg-inside-yt-version>
    <tomcat-version>9.0.22</tomcat-version>
    <javax.servlet-api-version>4.0.1</javax.servlet-api-version>
    <commons.version>1.4.9</commons.version>
    <junit.version>4.13.2</junit.version>
    <testng.version>7.3.0</testng.version>
    <testcontainers.version>1.16.2</testcontainers.version>
    <com.amazonaws.awsjavasdk.version>1.11.638</com.amazonaws.awsjavasdk.version>
    <s3mock_2.12.version>0.2.4</s3mock_2.12.version>
    <cloud-java.version>20794-7b8a0e7689</cloud-java.version>
    <cloud-proto-java.version>1.0.13450-74b83868c4</cloud-proto-java.version>
    <grpc.version>1.46.0</grpc.version>
    <netty-transport-native-epoll.version>4.1.42.Final</netty-transport-native-epoll.version>
    <prometheus.version>0.6.0</prometheus.version>
    <guava.version>25.0-jre</guava.version>
    <httpcore.version>4.4.8</httpcore.version>
    <httpclient.version>4.5.9</httpclient.version>
    <log4j.version>2.18.0</log4j.version>
    <commons-lang3.version>3.9</commons-lang3.version>
    <commons-pool2.version>2.11.1</commons-pool2.version>
    <commons-math3.version>3.6.1</commons-math3.version>
    <AmazonCorrettoCryptoProvider.version>1.2.0</AmazonCorrettoCryptoProvider.version>
    <proto-google-common-protos.version>1.17.0</proto-google-common-protos.version>
    <protobuf.version>3.21.5</protobuf.version>
    <protobuf-java-util.version>3.21.5</protobuf-java-util.version>
    <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
    <os-maven-plugin.version>1.5.0.Final</os-maven-plugin.version>
    <java.version>17</java.version>
    <common-codec.version>1.6</common-codec.version>
    <jsonwebtoken.version>0.11.2</jsonwebtoken.version>
    <jaxb-api.version>2.3.1</jaxb-api.version>
    <jackson-core.version>2.12.5</jackson-core.version>
    <jackson-databind.version>2.12.5</jackson-databind.version>
    <jackson-dataformat-yaml.version>2.12.5</jackson-dataformat-yaml.version>
    <jackson-datatype-jdk8.version>2.12.5</jackson-datatype-jdk8.version>
    <jackson-datatype-jsr310.version>2.12.5</jackson-datatype-jsr310.version>
    <bcprov-jdk15on.version>1.64</bcprov-jdk15on.version>
    <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
    <curator.version>4.2.0</curator.version>
    <mockito-core.version>3.5.15</mockito-core.version>
    <commons-cli.version>1.4</commons-cli.version>
    <commons-s3-amazon.version>6.3287</commons-s3-amazon.version>
    <net.razorvine-pickle.version>1.0</net.razorvine-pickle.version>
    <jeromq.version>0.5.1</jeromq.version>
    <cxf.version>3.3.6</cxf.version>
    <javax.mail.version>1.4.7</javax.mail.version>
    <zt-exec.version>1.12</zt-exec.version>
    <zt-process-killer.version>1.10</zt-process-killer.version>
    <!-- opentracing -->
    <opentracing-api.version>0.33.0</opentracing-api.version>
    <opentracing-util.version>0.33.0</opentracing-util.version>
    <opentracing-grpc.version>0.2.3</opentracing-grpc.version>
    <opentracing-ahttp.version>0.3.3</opentracing-ahttp.version>
    <opentracing-jaeger.version>1.4.0</opentracing-jaeger.version>
    <opentracing-web-servlet.version>0.4.1</opentracing-web-servlet.version>
    <postgresql.version>42.2.5</postgresql.version>
    <flyway-core.version>8.5.11</flyway-core.version>
    <envoy.version>0.1.28</envoy.version>
    <unified-agent-client.version>8232432</unified-agent-client.version>
    <jnr-fuse.version>0.5.7</jnr-fuse.version>
    <jnr-ffi.version>2.2.12</jnr-ffi.version>
    <docker-maven-plugin.version>0.36.1</docker-maven-plugin.version>
    <hibernate.version>5.6.9.Final</hibernate.version>
    <com.mchange.version>0.9.5.5</com.mchange.version>
    <micronaut.version>3.1.3</micronaut.version>
    <junit-api.version>5.8.1</junit-api.version>
    <micronaut-test.version>3.0.3</micronaut-test.version>
    <micronaut-maven-plugin.version>3.0.2</micronaut-maven-plugin.version>
    <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
    <h2database.version>2.1.212</h2database.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>
    <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
    <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
    <flyway-maven-plugin.version>8.0.2</flyway-maven-plugin.version>
    <io.kubernetes.version>15.0.1</io.kubernetes.version>
    <logback.version>1.2.7</logback.version>
    <slf4j.version>1.7.30</slf4j.version>
    <joda-time.version>2.10.13</joda-time.version>
    <easystream.version>1.2.15</easystream.version>
    <hamcrest-core.version>2.2</hamcrest-core.version>
    <aws-java-sdk-cloudwatchmetrics.version>1.12.112</aws-java-sdk-cloudwatchmetrics.version>
    <jackson-annotations.version>2.13.0</jackson-annotations.version>
    <javax.ws.rs.version>2.1.1</javax.ws.rs.version>
    <clickhouse.version>0.3.1</clickhouse.version>
    <s3mock_2.13.version>0.2.6</s3mock_2.13.version>
    <mockito-inline.version>3.6.28</mockito-inline.version>
    <aws-java-sdk-core.version>1.12.112</aws-java-sdk-core.version>
    <commons-io.version>2.4</commons-io.version>
    <s3proxy.version>1.7.1</s3proxy.version>
    <org.json.verion>20211205</org.json.verion>
    <checkstyle-maven-plugin.version>3.1.2</checkstyle-maven-plugin.version>
    <checkstyle.version>9.3</checkstyle.version>
    <net.lingala.zip4j.version>1.3.2</net.lingala.zip4j.version>
    <docker.java.version>3.2.12</docker.java.version>
    <streamex.version>0.7.3</streamex.version>
    <javax.validation.api.version>2.0.1.Final</javax.validation.api.version>
    <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
    <yc.java.sdk.version>2.5.1</yc.java.sdk.version>
    <c3p0.version>0.9.5.5</c3p0.version>
    <javax.inject.version>1</javax.inject.version>
    <fabric8-kuber-client.version>6.0.0</fabric8-kuber-client.version>
    <kubernetes-server-mock.version>6.0.0</kubernetes-server-mock.version>
    <mockwebserver.version>4.10.0</mockwebserver.version>
    <kotlin-stdlib.version>1.5.21</kotlin-stdlib.version>
  </properties>

  <repositories>
    <repository>
      <id>maven-central</id>
      <url>https://repo1.maven.org/maven2/</url>
    </repository>
    <repository>
      <id>jcentral</id>
      <url>https://jcenter.bintray.com/</url>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.opentracing</groupId>
        <artifactId>opentracing-api</artifactId>
        <version>${opentracing-api.version}</version>
      </dependency>
      <dependency>
        <groupId>io.opentracing</groupId>
        <artifactId>opentracing-util</artifactId>
        <version>${opentracing-util.version}</version>
      </dependency>
      <dependency>
        <groupId>io.opentracing.contrib</groupId>
        <artifactId>opentracing-grpc</artifactId>
        <version>${opentracing-grpc.version}</version>
        <exclusions>
          <exclusion>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.opentracing.contrib</groupId>
        <artifactId>opentracing-apache-httpclient</artifactId>
        <version>${opentracing-ahttp.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jaegertracing</groupId>
        <artifactId>jaeger-client</artifactId>
        <version>${opentracing-jaeger.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.opentracing.contrib</groupId>
        <artifactId>opentracing-web-servlet-filter</artifactId>
        <version>${opentracing-web-servlet.version}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.ws.rs</groupId>
        <artifactId>jakarta.ws.rs-api</artifactId>
        <version>2.1.5</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${jaxb-api.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-api</artifactId>
        <version>${jsonwebtoken.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-impl</artifactId>
        <version>${jsonwebtoken.version}</version>
      </dependency>
      <dependency>
        <groupId>io.jsonwebtoken</groupId>
        <artifactId>jjwt-jackson</artifactId>
        <version>${jsonwebtoken.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-pool2</artifactId>
        <version>${commons-pool2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-math3</artifactId>
        <version>${commons-math3.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>software.amazon.cryptools</groupId>
        <artifactId>AmazonCorrettoCryptoProvider</artifactId>
        <version>${AmazonCorrettoCryptoProvider.version}</version>
        <classifier>linux-x86_64</classifier>
      </dependency>
      <dependency>
        <groupId>ru.yandex.qe.nirvana.client</groupId>
        <artifactId>nirvana-client</artifactId>
        <version>${nirvana-client.version}</version>
      </dependency>
      <dependency>
        <groupId>ai.lzy</groupId>
        <artifactId>iceberg-inside-yt</artifactId>
        <version>${iceberg-inside-yt-version}</version>
      </dependency>
      <dependency>
        <groupId>ai.lzy</groupId>
        <artifactId>unified_agent_java_client</artifactId>
        <version>${unified-agent-client.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tomcat.embed</groupId>
        <artifactId>tomcat-embed-core</artifactId>
        <version>${tomcat-version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tomcat.embed</groupId>
        <artifactId>tomcat-embed-el</artifactId>
        <version>${tomcat-version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tomcat.embed</groupId>
        <artifactId>tomcat-embed-websocket</artifactId>
        <version>${tomcat-version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${javax.servlet-api-version}</version>
      </dependency>
      <dependency>
        <groupId>com.expleague</groupId>
        <artifactId>commons</artifactId>
        <version>${commons.version}</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-s3</artifactId>
        <version>${com.amazonaws.awsjavasdk.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud</groupId>
        <artifactId>cloud-auth-grpc-api</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud</groupId>
        <artifactId>cloud-auth-impl</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud.common.library</groupId>
        <artifactId>application</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud.common.library</groupId>
        <artifactId>lang</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud.common.library</groupId>
        <artifactId>i18n</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud.common.library</groupId>
        <artifactId>repository-core</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud.common.library</groupId>
        <artifactId>resource-manager-client</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud.common.library</groupId>
        <artifactId>metrics</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud.common.library</groupId>
        <artifactId>util</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud.common.library</groupId>
        <artifactId>static-di</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud.common.library</groupId>
        <artifactId>json-util</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud.common.library</groupId>
        <artifactId>log-util</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud</groupId>
        <artifactId>quota</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud.common.library</groupId>
        <artifactId>validation</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>yandex.cloud</groupId>
        <artifactId>fortuna</artifactId>
        <version>${cloud-java.version}</version>
      </dependency>
      <dependency>
        <groupId>ru.yandex.cloud</groupId>
        <artifactId>cloud-proto-java</artifactId>
        <version>${cloud-proto-java.version}</version>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-protobuf</artifactId>
        <version>${grpc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-core</artifactId>
        <version>${grpc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-api</artifactId>
        <version>${grpc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-context</artifactId>
        <version>${grpc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-stub</artifactId>
        <version>${grpc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-netty</artifactId>
        <version>${grpc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.envoyproxy.controlplane</groupId>
        <artifactId>server</artifactId>
        <version>${envoy.version}</version>
      </dependency>
      <dependency>
        <groupId>io.envoyproxy.controlplane</groupId>
        <artifactId>cache</artifactId>
        <version>${envoy.version}</version>
      </dependency>
      <dependency>
        <groupId>io.envoyproxy.controlplane</groupId>
        <artifactId>api</artifactId>
        <version>${envoy.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-transport-native-epoll</artifactId>
        <version>${netty-transport-native-epoll.version}</version>
        <classifier>linux-x86_64</classifier>
      </dependency>
      <dependency>
        <groupId>io.prometheus</groupId>
        <artifactId>simpleclient</artifactId>
        <version>${prometheus.version}</version>
      </dependency>
      <dependency>
        <groupId>io.prometheus</groupId>
        <artifactId>simpleclient_common</artifactId>
        <version>${prometheus.version}</version>
      </dependency>
      <dependency>
        <groupId>io.prometheus</groupId>
        <artifactId>simpleclient_guava</artifactId>
        <version>${prometheus.version}</version>
      </dependency>
      <dependency>
        <groupId>io.prometheus</groupId>
        <artifactId>simpleclient_hotspot</artifactId>
        <version>${prometheus.version}</version>
      </dependency>
      <dependency>
        <groupId>io.prometheus</groupId>
        <artifactId>simpleclient_httpserver</artifactId>
        <version>${prometheus.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${common-codec.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpcore</artifactId>
        <version>${httpcore.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${httpclient.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.api.grpc</groupId>
        <artifactId>proto-google-common-protos</artifactId>
        <version>${proto-google-common-protos.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson-core.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson-databind.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${jackson-dataformat-yaml.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jdk8</artifactId>
        <version>${jackson-datatype-jdk8.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <version>${jackson-datatype-jsr310.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java-util</artifactId>
        <version>${protobuf-java-util.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>${javax.annotation-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-framework</artifactId>
        <version>${curator.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-recipes</artifactId>
        <version>${curator.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-debug-jdk15on</artifactId>
        <version>${bcprov-jdk15on.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk15on</artifactId>
        <version>${bcprov-jdk15on.version}</version>
      </dependency>
      <dependency>
        <groupId>io.prometheus</groupId>
        <artifactId>simpleclient_log4j2</artifactId>
        <version>${prometheus.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons-cli.version}</version>
      </dependency>
      <dependency>
        <groupId>ru.yandex.qe</groupId>
        <artifactId>commons-s3-amazon</artifactId>
        <version>${commons-s3-amazon.version}</version>
      </dependency>
      <dependency>
        <groupId>net.razorvine</groupId>
        <artifactId>pickle</artifactId>
        <version>${net.razorvine-pickle.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-test</artifactId>
        <version>${curator.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito-core.version}</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>${testng.version}</version>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers</artifactId>
        <version>${testcontainers.version}</version>
      </dependency>
      <dependency>
        <groupId>io.findify</groupId>
        <artifactId>s3mock_2.12</artifactId>
        <version>${s3mock_2.12.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-testing</artifactId>
        <version>${grpc.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>mail</artifactId>
        <version>${javax.mail.version}</version>
      </dependency>
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
        <version>${flyway-core.version}</version>
      </dependency>
      <dependency>
        <groupId>org.zeroturnaround</groupId>
        <artifactId>zt-exec</artifactId>
        <version>${zt-exec.version}</version>
      </dependency>
      <dependency>
        <groupId>org.zeroturnaround</groupId>
        <artifactId>zt-process-killer</artifactId>
        <version>${zt-process-killer.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.serceman</groupId>
        <artifactId>jnr-fuse</artifactId>
        <version>${jnr-fuse.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.github.jnr</groupId>
            <artifactId>jnr-ffi</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.github.jnr</groupId>
        <artifactId>jnr-ffi</artifactId>
        <version>${jnr-ffi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate.orm</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${hibernate.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-c3p0</artifactId>
        <version>${hibernate.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.mchange</groupId>
        <artifactId>c3p0</artifactId>
        <version>${c3p0.version}</version>
      </dependency>
      <dependency>
        <groupId>io.micronaut</groupId>
        <artifactId>micronaut-inject</artifactId>
        <version>${micronaut.version}</version>
      </dependency>
      <dependency>
        <groupId>io.micronaut</groupId>
        <artifactId>micronaut-runtime</artifactId>
        <version>${micronaut.version}</version>
      </dependency>
      <dependency>
        <groupId>io.micronaut</groupId>
        <artifactId>micronaut-inject-java</artifactId>
        <version>${micronaut.version}</version>
      </dependency>
      <dependency>
        <groupId>io.micronaut</groupId>
        <artifactId>micronaut-http-server-netty</artifactId>
        <version>${micronaut.version}</version>
      </dependency>
      <dependency>
        <groupId>io.micronaut</groupId>
        <artifactId>micronaut-validation</artifactId>
        <version>${micronaut.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit-api.version}</version>
      </dependency>
      <dependency>
        <groupId>io.micronaut.test</groupId>
        <artifactId>micronaut-test-junit5</artifactId>
        <version>${micronaut-test.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${h2database.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>1.30</version>
      </dependency>
      <dependency>
        <groupId>io.kubernetes</groupId>
        <artifactId>client-java</artifactId>
        <version>${io.kubernetes.version}</version>
      </dependency>
      <dependency>
        <groupId>io.micronaut</groupId>
        <artifactId>micronaut-http-client</artifactId>
        <version>${micronaut.version}</version>
      </dependency>
      <dependency>
        <groupId>com.azure</groupId>
        <artifactId>azure-sdk-bom</artifactId>
        <version>1.0.5</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>ru.yandex.clickhouse</groupId>
        <artifactId>clickhouse-jdbc</artifactId>
        <version>${clickhouse.version}</version>
      </dependency>
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda-time.version}</version>
      </dependency>
      <dependency>
        <groupId>net.sf.jsignature.io-tools</groupId>
        <artifactId>easystream</artifactId>
        <version>${easystream.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>${hamcrest-core.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-cloudwatchmetrics</artifactId>
        <version>${aws-java-sdk-cloudwatchmetrics.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson-annotations.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>${javax.ws.rs.version}</version>
      </dependency>
      <dependency>
        <groupId>io.findify</groupId>
        <artifactId>s3mock_2.13</artifactId>
        <version>${s3mock_2.13.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-inline</artifactId>
        <version>${mockito-inline.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-core</artifactId>
        <version>${aws-java-sdk-core.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.docker-java</groupId>
        <artifactId>docker-java</artifactId>
        <version>${docker.java.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-clients</artifactId>
        <version>${kafka.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate.orm</groupId>
        <artifactId>hibernate-c3p0</artifactId>
        <version>${hibernate.version}</version>
      </dependency>
      <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>${org.json.verion}</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk-sts</artifactId>
        <version>${aws-java-sdk-core.version}</version>
      </dependency>
      <dependency>
        <groupId>net.lingala.zip4j</groupId>
        <artifactId>zip4j</artifactId>
        <version>${net.lingala.zip4j.version}</version>
      </dependency>
      <dependency>
        <artifactId>streamex</artifactId>
        <groupId>one.util</groupId>
        <version>${streamex.version}</version>
      </dependency>
      <dependency>
        <groupId>org.gaul</groupId>
        <artifactId>s3proxy</artifactId>
        <exclusions>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
        </exclusions>
        <version>${s3proxy.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${checkstyle-maven-plugin.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <version>${javax.validation.api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.yandex.cloud</groupId>
        <artifactId>java-sdk-services</artifactId>
        <version>${yc.java.sdk.version}</version>
      </dependency>
      <dependency>
        <groupId>com.mchange</groupId>
        <artifactId>c3p0</artifactId>
        <version>${com.mchange.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>${javax.inject.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-client</artifactId>
        <version>${fabric8-kuber-client.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-server-mock</artifactId>
        <version>${kubernetes-server-mock.version}</version>
      </dependency>
      <dependency>
        <groupId>com.squareup.okhttp3</groupId>
        <artifactId>mockwebserver</artifactId>
        <version>${mockwebserver.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib</artifactId>
        <version>${kotlin-stdlib.version}</version>
      </dependency>
    </dependencies>

  </dependencyManagement>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>${os-maven-plugin.version}</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-help-plugin</artifactId>
        <version>${maven-help-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-maven-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <forceJavacCompilerUse>true</forceJavacCompilerUse>
          <annotationProcessorPaths>
            <path>
              <groupId>io.micronaut</groupId>
              <artifactId>micronaut-inject-java</artifactId>
              <version>${micronaut.version}</version>
            </path>
            <path>
              <groupId>io.micronaut</groupId>
              <artifactId>micronaut-validation</artifactId>
              <version>${micronaut.version}</version>
            </path>
            <path>
              <groupId>org.apache.logging.log4j</groupId>
              <artifactId>log4j-core</artifactId>
              <version>${log4j.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <exclude>ai/lzy/v1/**/*</exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.xolstice.maven.plugins</groupId>
          <artifactId>protobuf-maven-plugin</artifactId>
          <version>${protobuf-maven-plugin.version}</version>
          <configuration>
            <!--suppress MavenModelInspection -->
            <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
            </protocArtifact>
            <pluginId>grpc-java</pluginId>
            <!--suppress MavenModelInspection -->
            <pluginArtifact>
              io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}
            </pluginArtifact>
            <clearOutputDirectory>false</clearOutputDirectory>
          </configuration>
          <executions>
            <execution>
              <id>src</id>
              <configuration>
                <protoSourceRoot>${basedir}/src/main/proto</protoSourceRoot>
                <includes>
                  <include>**/*.proto</include>
                </includes>
              </configuration>
              <goals>
                <goal>compile</goal>
                <goal>compile-custom</goal>
                <goal>test-compile</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${docker-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin.version}</version>
          <dependencies>
            <dependency>
              <artifactId>log4j-maven-shade-plugin-extensions</artifactId>
              <groupId>io.github.edwgiz</groupId>
              <version>${log4j.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.flywaydb</groupId>
          <artifactId>flyway-maven-plugin</artifactId>
          <version>${flyway-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${checkstyle-maven-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
          <configuration>
            <configLocation>${project.basedir}/../.idea/codeStyles/LzyCheckStyle.xml</configLocation>
            <sourceDirectories>${project.basedir}/src</sourceDirectories>
            <encoding>UTF-8</encoding>
            <consoleOutput>true</consoleOutput>
            <failsOnError>true</failsOnError>
            <violationSeverity>warning</violationSeverity>
            <linkXRef>false</linkXRef>
          </configuration>
          <executions>
            <execution>
              <phase>install</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.surefire</groupId>
              <artifactId>surefire-junit47</artifactId>
              <version>${maven-surefire-plugin.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>io.micronaut.build</groupId>
          <artifactId>micronaut-maven-plugin</artifactId>
          <version>${micronaut-maven-plugin.version}</version>
          <extensions>true</extensions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
