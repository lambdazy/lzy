syntax = "proto3";

package yandex.cloud.priv.datasphere.v2;

import "yandex/cloud/priv/datasphere/v2/lzy-auth.proto";
import "yandex/cloud/priv/datasphere/v2/lzy-zygote.proto";
import "yandex/cloud/priv/datasphere/v2/lzy-task.proto";

option go_package = "datasphere";
option java_outer_classname = "Servant";
option java_package = "yandex.cloud.priv.datasphere.v2.lzy";

service LzyServant {
    /** Only one execution at a time */
    rpc Execute (TaskSpec) returns (stream ExecutionProgress);
    rpc OpenOutputSlot (SlotRequest) returns (stream Message);
    rpc ConfigureSlot (SlotCommand) returns (SlotCommandStatus);
    rpc Signal (TaskSignal) returns (ExecutionStarted);
    rpc Update (Auth) returns (ExecutionStarted);
    rpc Status(Empty) returns (ServantStatus);
    rpc Stop (Empty) returns (Empty);
}

message SlotCommand {
    string slot = 1;
    oneof command {
        CreateSlotCommand create = 2;
        ConnectSlotCommand connect = 3;
        DisconnectCommand disconnect = 4;
        StatusCommand status = 5;
        CloseCommand close = 6;
    }
}

message CreateSlotCommand {
    Slot slot = 1;
    string channelId = 2;
    bool isPipe = 3;
}

message ConnectSlotCommand {
    string slotUri = 1;
}

message DisconnectCommand {
}

message CloseCommand {
}

message StatusCommand {
}

message SlotCommandStatus {
    oneof payload {
        RC rc = 1;
        SlotStatus status = 2;
    }

    enum RC {
        SUCCESS = 0;
        ERROR = 1;
    }
}

message SlotRequest {
    string slot = 1;
    int64 offset = 2;
}

message Message {
    enum Controls {
        EOS = 0;
    }

    oneof message {
        Controls control = 1;
        bytes chunk = 2;
    }
}

message SlotSpec {
    Slot slot = 1;
    string channelId = 2;
}

message ExecutionProgress {
    oneof status {
        ExecutionStarted started = 1;
        AttachSlot attached = 2;
        ExecutionConcluded exit = 3;
        StateChanged changed = 4;
    }
}

message ExecutionStarted {
}

message StateChanged {
    State newState = 1;
    enum State {
        PREPARING = 0;
        CONNECTED = 1;
        RUNNING = 2;
        SUSPENDED = 3;
        FINISHED = 4;
        DESTROYED = 5;
    }
}
message AttachSlot {
    Slot slot = 1;
    string channel = 2;
}

message ExecutionConcluded {
    int32 rc = 1;
}

message ServantStatus {
    Status status = 1;
    repeated SlotStatus connections = 2;

    enum Status {
        STARTED = 0;
        REGISTERING = 1;
        REGISTERED = 2;
        PREPARING_EXECUTION = 3;
        EXECUTING = 4;
    }
}
