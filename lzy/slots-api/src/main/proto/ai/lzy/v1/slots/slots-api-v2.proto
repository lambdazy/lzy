syntax = "proto3";

package ai.lzy.v1.slots;

import "ai/lzy/v1/common/slot.proto";
import "ai/lzy/v1/long-running/operation.proto";
import "ai/lzy/v1/long-running/option.proto";
import "ai/lzy/v1/common/channel.proto";

option java_outer_classname = "LSA";
option java_package = "ai.lzy.v1.slots.v2";

service LzySlotsApi {

  // Connect slot to remote peer (call from channel manager)
  rpc ConnectPeer (ConnectPeerRequest) returns (ConnectPeerResponse) {}

  // Read data from slot (call from peer)
  rpc Read (ReadDataRequest) returns (stream ReadDataChunk);
}

// ============ Connect ==============

message ConnectPeerRequest {
  string peer_id = 1;

  common.PeerDescription target = 2;
}

message ConnectPeerResponse {}

// ============ OpenOutputSlot ==============

message ReadDataRequest {
  string peer_id = 1;
  int64 offset   = 2;
}

message ReadDataChunk {
  enum Control {
    EOS = 0;
  }

  oneof kind {
    Control control = 1;
    bytes chunk = 2;
  }
}