"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class AmazonS3Endpoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENDPOINT_FIELD_NUMBER: builtins.int
    ACCESSTOKEN_FIELD_NUMBER: builtins.int
    SECRETTOKEN_FIELD_NUMBER: builtins.int
    endpoint: builtins.str
    accessToken: builtins.str
    secretToken: builtins.str
    def __init__(
        self,
        *,
        endpoint: builtins.str = ...,
        accessToken: builtins.str = ...,
        secretToken: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["accessToken", b"accessToken", "endpoint", b"endpoint", "secretToken", b"secretToken"]) -> None: ...

global___AmazonS3Endpoint = AmazonS3Endpoint

@typing_extensions.final
class AzureS3Endpoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CONNECTIONSTRING_FIELD_NUMBER: builtins.int
    connectionString: builtins.str
    def __init__(
        self,
        *,
        connectionString: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["connectionString", b"connectionString"]) -> None: ...

global___AzureS3Endpoint = AzureS3Endpoint

@typing_extensions.final
class S3Locator(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    BUCKET_FIELD_NUMBER: builtins.int
    AMAZON_FIELD_NUMBER: builtins.int
    AZURE_FIELD_NUMBER: builtins.int
    key: builtins.str
    bucket: builtins.str
    @property
    def amazon(self) -> global___AmazonS3Endpoint: ...
    @property
    def azure(self) -> global___AzureS3Endpoint: ...
    def __init__(
        self,
        *,
        key: builtins.str = ...,
        bucket: builtins.str = ...,
        amazon: global___AmazonS3Endpoint | None = ...,
        azure: global___AzureS3Endpoint | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["amazon", b"amazon", "azure", b"azure", "endpoint", b"endpoint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["amazon", b"amazon", "azure", b"azure", "bucket", b"bucket", "endpoint", b"endpoint", "key", b"key"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["endpoint", b"endpoint"]) -> typing_extensions.Literal["amazon", "azure"] | None: ...

global___S3Locator = S3Locator
