"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import ai.lzy.v1.common.data_scheme_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Operation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class SlotDescription(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        PATH_FIELD_NUMBER: builtins.int
        STORAGEURI_FIELD_NUMBER: builtins.int
        path: builtins.str
        storageUri: builtins.str
        def __init__(
            self,
            *,
            path: builtins.str = ...,
            storageUri: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["path", b"path", "storageUri", b"storageUri"]) -> None: ...

    @typing_extensions.final
    class PythonEnvSpec(google.protobuf.message.Message):
        """TODO(artolord) remove this and move to upper level"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class LocalModule(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            NAME_FIELD_NUMBER: builtins.int
            URL_FIELD_NUMBER: builtins.int
            name: builtins.str
            """Name of module"""
            url: builtins.str
            """Url in storage to get module from"""
            def __init__(
                self,
                *,
                name: builtins.str = ...,
                url: builtins.str = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "url", b"url"]) -> None: ...

        YAML_FIELD_NUMBER: builtins.int
        LOCALMODULES_FIELD_NUMBER: builtins.int
        yaml: builtins.str
        """Conda yaml to install before execution"""
        @property
        def localModules(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Operation.PythonEnvSpec.LocalModule]: ...
        def __init__(
            self,
            *,
            yaml: builtins.str = ...,
            localModules: collections.abc.Iterable[global___Operation.PythonEnvSpec.LocalModule] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["localModules", b"localModules", "yaml", b"yaml"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    COMMAND_FIELD_NUMBER: builtins.int
    INPUTSLOTS_FIELD_NUMBER: builtins.int
    OUTPUTSLOTS_FIELD_NUMBER: builtins.int
    DOCKERIMAGE_FIELD_NUMBER: builtins.int
    PYTHON_FIELD_NUMBER: builtins.int
    POOLSPECNAME_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Some human-readable name to show in UI"""
    description: builtins.str
    """optional
    Some human-readable description
    """
    command: builtins.str
    """command to execute"""
    @property
    def inputSlots(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Operation.SlotDescription]:
        """Paths of slots to open. Must be uniq per workflow"""
    @property
    def outputSlots(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Operation.SlotDescription]: ...
    dockerImage: builtins.str
    """optional
    If not set, running on default Lzy image
    """
    @property
    def python(self) -> global___Operation.PythonEnvSpec:
        """optional
        If not set, running in default bash env
        """
    poolSpecName: builtins.str
    """Label to execute operation in"""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        description: builtins.str = ...,
        command: builtins.str = ...,
        inputSlots: collections.abc.Iterable[global___Operation.SlotDescription] | None = ...,
        outputSlots: collections.abc.Iterable[global___Operation.SlotDescription] | None = ...,
        dockerImage: builtins.str = ...,
        python: global___Operation.PythonEnvSpec | None = ...,
        poolSpecName: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["env", b"env", "python", b"python"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["command", b"command", "description", b"description", "dockerImage", b"dockerImage", "env", b"env", "inputSlots", b"inputSlots", "name", b"name", "outputSlots", b"outputSlots", "poolSpecName", b"poolSpecName", "python", b"python"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["env", b"env"]) -> typing_extensions.Literal["python"] | None: ...

global___Operation = Operation

@typing_extensions.final
class DataDescription(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STORAGEURI_FIELD_NUMBER: builtins.int
    DATASCHEME_FIELD_NUMBER: builtins.int
    storageUri: builtins.str
    @property
    def dataScheme(self) -> ai.lzy.v1.common.data_scheme_pb2.DataScheme:
        """optional
        If not set, using plain scheme
        """
    def __init__(
        self,
        *,
        storageUri: builtins.str = ...,
        dataScheme: ai.lzy.v1.common.data_scheme_pb2.DataScheme | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dataScheme", b"dataScheme"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataScheme", b"dataScheme", "storageUri", b"storageUri"]) -> None: ...

global___DataDescription = DataDescription

@typing_extensions.final
class Graph(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    PARENTGRAPHID_FIELD_NUMBER: builtins.int
    OPERATIONS_FIELD_NUMBER: builtins.int
    DATADESCRIPTIONS_FIELD_NUMBER: builtins.int
    ZONE_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Human-readable name to show in UI"""
    parentGraphId: builtins.str
    @property
    def operations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Operation]: ...
    @property
    def dataDescriptions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DataDescription]: ...
    zone: builtins.str
    """optional
    Availability zone to execute graph in.
    """
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        parentGraphId: builtins.str = ...,
        operations: collections.abc.Iterable[global___Operation] | None = ...,
        dataDescriptions: collections.abc.Iterable[global___DataDescription] | None = ...,
        zone: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dataDescriptions", b"dataDescriptions", "name", b"name", "operations", b"operations", "parentGraphId", b"parentGraphId", "zone", b"zone"]) -> None: ...

global___Graph = Graph

@typing_extensions.final
class VmPoolSpec(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POOLSPECNAME_FIELD_NUMBER: builtins.int
    CPUTYPE_FIELD_NUMBER: builtins.int
    CPUCOUNT_FIELD_NUMBER: builtins.int
    GPUTYPE_FIELD_NUMBER: builtins.int
    GPUCOUNT_FIELD_NUMBER: builtins.int
    RAMGB_FIELD_NUMBER: builtins.int
    ZONES_FIELD_NUMBER: builtins.int
    poolSpecName: builtins.str
    """'s', 'm', 'l', ..."""
    cpuType: builtins.str
    """IceLake, CascadeLake, Broadwell, ..."""
    cpuCount: builtins.int
    """# of CPU cores"""
    gpuType: builtins.str
    """V100, A100, ..."""
    gpuCount: builtins.int
    """# of GPU cores"""
    ramGb: builtins.int
    """RAM in GB"""
    @property
    def zones(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """availability zones"""
    def __init__(
        self,
        *,
        poolSpecName: builtins.str = ...,
        cpuType: builtins.str = ...,
        cpuCount: builtins.int = ...,
        gpuType: builtins.str = ...,
        gpuCount: builtins.int = ...,
        ramGb: builtins.int = ...,
        zones: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cpuCount", b"cpuCount", "cpuType", b"cpuType", "gpuCount", b"gpuCount", "gpuType", b"gpuType", "poolSpecName", b"poolSpecName", "ramGb", b"ramGb", "zones", b"zones"]) -> None: ...

global___VmPoolSpec = VmPoolSpec

@typing_extensions.final
class WhiteboardField(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class DefaultFieldDesc(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        URI_FIELD_NUMBER: builtins.int
        DATASCHEME_FIELD_NUMBER: builtins.int
        uri: builtins.str
        @property
        def dataScheme(self) -> ai.lzy.v1.common.data_scheme_pb2.DataScheme: ...
        def __init__(
            self,
            *,
            uri: builtins.str = ...,
            dataScheme: ai.lzy.v1.common.data_scheme_pb2.DataScheme | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["dataScheme", b"dataScheme"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["dataScheme", b"dataScheme", "uri", b"uri"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    DEFAULT_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def default(self) -> global___WhiteboardField.DefaultFieldDesc:
        """optional
        Default field value
        """
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        default: global___WhiteboardField.DefaultFieldDesc | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["default", b"default"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["default", b"default", "name", b"name"]) -> None: ...

global___WhiteboardField = WhiteboardField
