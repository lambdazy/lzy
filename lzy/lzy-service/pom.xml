<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>ai.lzy</groupId>
        <artifactId>parent</artifactId>
        <version>${revision}${changelist}</version>
        <relativePath>../../parent</relativePath>
    </parent>

    <artifactId>lzy-service</artifactId>

    <properties>
        <exec.mainClass>ai.lzy.service.App</exec.mainClass>
    </properties>

    <dependencies>
        <!-- other lzy deps -->
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>allocator-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>storage-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>channel-manager-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>iam-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>long-running-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>long-running</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>lzy-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>graph-executor-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>storage</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>util-auth</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>util-test</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>util-db</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>util-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>util-grpc</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>whiteboard-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>util-kafka</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>s3-sink-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>worker</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- other external deps -->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-inject-java</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-runtime</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.findify</groupId>
            <artifactId>s3mock_2.13</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http2</artifactId>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler-proxy</artifactId>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-native-unix-common</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty-shaded</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
        </dependency>

        <!-- test lzy deps -->
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>test-context</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>allocator</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>graph-executor</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>scheduler</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>iam</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ai.lzy</groupId>
            <artifactId>channel-manager</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- test external deps -->
        <dependency>
            <groupId>io.zonky.test</groupId>
            <artifactId>embedded-postgres</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <plugins>
            <!-- the plugin resolves ${revision} and other version placeholders in installed/deployed poms -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.micronaut.build</groupId>
                <artifactId>micronaut-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-shade</id>
                        <configuration>
                            <finalName>${project.artifactId}</finalName>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>**/Log4j2Plugins.dat</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${exec.mainClass}</mainClass>
                                    <manifestEntries>
                                        <Multi-Release>true</Multi-Release>
                                    </manifestEntries>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"></transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
